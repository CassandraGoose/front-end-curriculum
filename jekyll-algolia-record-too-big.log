{
  "html": "<code><span class=\"k\">import</span> <span class=\"nx\">React</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">Component</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'react'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"p\">{</span> <span class=\"nx\">connect</span> <span class=\"p\">}</span> <span class=\"k\">from</span> <span class=\"s1\">'react-redux'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">actions</span> <span class=\"k\">from</span> <span class=\"s1\">'../../actions'</span>\n\n<span class=\"kd\">class</span> <span class=\"nx\">Login</span> <span class=\"kd\">extends</span> <span class=\"nx\">Component</span> <span class=\"p\">{</span>\n  <span class=\"kd\">constructor</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">super</span><span class=\"p\">(</span><span class=\"nx\">props</span><span class=\"p\">)</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n      <span class=\"na\">email</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n      <span class=\"na\">password</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">componentWillMount</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">loggedIn</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">history</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"s1\">'/main'</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">componentWillReceiveProps</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">nextProps</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span><span class=\"p\">(</span><span class=\"nx\">nextProps</span><span class=\"p\">.</span><span class=\"nx\">loggedIn</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">history</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"s1\">'/main'</span><span class=\"p\">)</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">handleChange</span> <span class=\"o\">=</span> <span class=\"nx\">event</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">()</span>\n    <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">setState</span><span class=\"p\">({</span>\n      <span class=\"p\">[</span><span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">]:</span> <span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">target</span><span class=\"p\">.</span><span class=\"nx\">value</span>\n    <span class=\"p\">})</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">submitLogin</span> <span class=\"o\">=</span> <span class=\"k\">async</span> <span class=\"nx\">event</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span>\n    <span class=\"nx\">event</span><span class=\"p\">.</span><span class=\"nx\">preventDefault</span><span class=\"p\">()</span>\n    <span class=\"kr\">await</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">props</span><span class=\"p\">.</span><span class=\"nx\">loginUser</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">state</span><span class=\"p\">)</span>\n  <span class=\"p\">}</span>\n\n  <span class=\"nx\">render</span> <span class=\"o\">=</span> <span class=\"p\">()</span> <span class=\"o\">=&gt;</span> <span class=\"p\">(</span>\n    <span class=\"o\">&lt;</span><span class=\"nx\">div</span><span class=\"o\">&gt;</span>\n      <span class=\"o\">&lt;</span><span class=\"nx\">form</span> <span class=\"nx\">onSubmit</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">submitLogin</span><span class=\"p\">}</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nx\">input</span>\n          <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"s1\">'text'</span>\n          <span class=\"nx\">name</span><span class=\"o\">=</span><span class=\"s1\">'email'</span>\n          <span class=\"nx\">placeholder</span><span class=\"o\">=</span><span class=\"s1\">'Email'</span>\n          <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleChange</span><span class=\"p\">}</span> <span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"nx\">input</span>\n          <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"s1\">'password'</span>\n          <span class=\"nx\">name</span><span class=\"o\">=</span><span class=\"s1\">'password'</span>\n          <span class=\"nx\">placeholder</span><span class=\"o\">=</span><span class=\"s1\">'Password'</span>\n          <span class=\"nx\">onChange</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">handleChange</span><span class=\"p\">}</span><span class=\"sr\">/</span><span class=\"err\">&gt;\n</span>        <span class=\"o\">&lt;</span><span class=\"nx\">button</span> <span class=\"nx\">type</span><span class=\"o\">=</span><span class=\"s1\">'submit'</span><span class=\"o\">&gt;</span><span class=\"nx\">Submit</span><span class=\"o\">&lt;</span><span class=\"sr\">/button</span><span class=\"err\">&gt;\n</span>      <span class=\"o\">&lt;</span><span class=\"sr\">/form</span><span class=\"err\">&gt;\n</span>    <span class=\"o\">&lt;</span><span class=\"sr\">/div</span><span class=\"err\">&gt;\n</span>  <span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">mapStateToProps</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">state</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">({</span>\n  <span class=\"na\">loggedIn</span><span class=\"p\">:</span> <span class=\"nx\">state</span><span class=\"p\">.</span><span class=\"nx\">authentication</span><span class=\"p\">.</span><span class=\"nx\">loggedIn</span>\n<span class=\"p\">})</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">mapDispatchToProps</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">dispatch</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">({</span>\n  <span class=\"na\">loginUser</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"nx\">dispatch</span><span class=\"p\">(</span><span class=\"nx\">actions</span><span class=\"p\">.</span><span class=\"nx\">loginUser</span><span class=\"p\">(</span><span class=\"nx\">user</span><span class=\"p\">))</span>\n<span class=\"p\">})</span>\n\n<span class=\"k\">export</span> <span class=\"k\">default</span> <span class=\"nx\">connect</span><span class=\"p\">(</span><span class=\"nx\">mapStateToProps</span><span class=\"p\">,</span> <span class=\"nx\">mapDispatchToProps</span><span class=\"p\">)(</span><span class=\"nx\">Login</span><span class=\"p\">)</span>\n</code>",
  "content": "import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n    }\n  }\n\n  componentWillMount = () => {\n    if(this.props.loggedIn) {\n      this.props.history.push('/main')\n    }\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    if(nextProps.loggedIn) {\n      this.props.history.push('/main')\n    }\n  }\n\n  handleChange = event => {\n    event.preventDefault()\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  submitLogin = async event => {\n    event.preventDefault()\n    await this.props.loginUser(this.state)\n  }\n\n  render = () => (\n    <div>\n      <form onSubmit={this.submitLogin}>\n        <input\n          type='text'\n          name='email'\n          placeholder='Email'\n          onChange={this.handleChange} />\n        <input\n          type='password'\n          name='password'\n          placeholder='Password'\n          onChange={this.handleChange}/>\n        <button type='submit'>Submit</button>\n      </form>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.authentication.loggedIn\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginUser: (user) => dispatch(actions.loginUser(user))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n",
  "headings": [
    "Code Along",
    "Step 2: Adding my first saga"
  ],
  "anchor": "step-2-adding-my-first-saga",
  "custom_ranking": {
    "position": 72,
    "heading": 70
  },
  "title": "Redux Saga",
  "tags": "React, Redux, Sagas",
  "categories": [

  ],
  "slug": "redux-sagas",
  "type": "page",
  "url": "/lessons/module-3/redux-sagas"
}